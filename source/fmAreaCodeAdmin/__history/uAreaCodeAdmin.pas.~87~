unit uAreaCodeAdmin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, W7Classes, W7Panels, AdvOfficeTabSet,
  AdvOfficeTabSetStylers, AdvSmoothPanel, Vcl.ExtCtrls, AdvSmoothLabel,
  Vcl.StdCtrls, AdvEdit, Vcl.Buttons, Vcl.Grids, AdvObj, BaseGrid, AdvGrid,
  AdvToolBtn,ADODB,ActiveX, uSubForm, CommandArray, AdvToolBar,
  AdvToolBarStylers, Vcl.Menus;

type
  TfmAreaCodeAdmin = class(TfmASubForm)
    Image1: TImage;
    BodyPanel: TW7Panel;
    menuTab: TAdvOfficeTabSet;
    dongCodeList: TAdvSmoothPanel;
    dongCodeAdd: TAdvSmoothPanel;
    lb_DepartCode: TAdvSmoothLabel;
    ed_areaname: TAdvEdit;
    btn_Search: TSpeedButton;
    sg_dongCode: TAdvStringGrid;
    btn_Delete: TSpeedButton;
    lb_DepartAdd: TAdvSmoothLabel;
    ed_InsertName: TAdvEdit;
    btn_InsertSave: TSpeedButton;
    btn_add: TSpeedButton;
    dongCodeUpdate: TAdvSmoothPanel;
    ed_UpdateChildCode: TAdvEdit;
    cmb_ListDongCode: TComboBox;
    lb_Company: TAdvSmoothLabel;
    lb_CompanyAdd: TAdvSmoothLabel;
    cmb_AddDongCode: TComboBox;
    lb_CompanyUdate: TAdvSmoothLabel;
    cmb_UpdateDongCode: TComboBox;
    ed_UpdateAreaName: TAdvEdit;
    lb_departUpdate: TAdvSmoothLabel;
    btn_UpdateSave: TSpeedButton;
    ed_UpdateParentCode: TAdvEdit;
    AdvToolBarOfficeStyler1: TAdvToolBarOfficeStyler;
    AdvOfficeTabSetOfficeStyler1: TAdvOfficeTabSetOfficeStyler;
    PopupMenu1: TPopupMenu;
    pm_update: TMenuItem;
    procedure menuTabChange(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormResize(Sender: TObject);
    procedure btn_SearchClick(Sender: TObject);
    procedure lb_page1Click(Sender: TObject);
    procedure ed_areanameChange(Sender: TObject);
    procedure sg_dongCodeKeyUp(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure sg_dongCodeKeyPress(Sender: TObject; var Key: Char);
    procedure btn_SaveClick(Sender: TObject);
    procedure btn_InsertSaveClick(Sender: TObject);
    procedure ed_InsertNameKeyPress(Sender: TObject; var Key: Char);
    procedure sg_dongCodeCheckBoxClick(Sender: TObject; ACol, ARow: Integer;
      State: Boolean);
    procedure btn_DeleteClick(Sender: TObject);
    procedure btn_addClick(Sender: TObject);
    procedure sg_dongCodeColChanging(Sender: TObject; OldCol, NewCol: Integer;
      var Allow: Boolean);
    procedure sg_dongCodeDblClick(Sender: TObject);
    procedure btn_UpdateSaveClick(Sender: TObject);
    procedure cmb_ListDongCodeChange(Sender: TObject);
    procedure ed_UpdateAreaNameKeyPress(Sender: TObject; var Key: Char);
    procedure pm_updateClick(Sender: TObject);
  private
    ListDongCodeList : TStringList;
    AddDongCodeList : TStringList;
    UpdateDongCodeList : TStringList;

    L_nPageGroupMaxCount : integer ; //한페이지 그룹에 해당하는 페이지수
    L_nPageListMaxCount : integer; //한페이지에 출력되는 리스트 갯수
    L_nCurrentPageGroup : integer;   //지금 속한 페이지 그룹
    L_nCurrentPageList : integer;    //지금 조회 하고 있는 페이지
    L_CurrentSaveRow : integer;

    L_nCheckCount : integer;        //체크 된 카운트
    { Private declarations }
    procedure PageTabCreate(aPageGroup,aCurrentPage:integer);
    procedure ShowAreaCode(aCurrentCode:string;aTopRow:integer = 0);
    procedure UpdateCell;
    procedure SaveUpdateCell;

    function ParentCodeDelete(aParentCode:string):Boolean;
    function ChildCodeDelete(aChildCode:string):Boolean;

    function GetNextBuildingCode:string;
  private
    procedure LoadParentCode(cmbBox:TComboBox;stringList:TStringList;aAll:Boolean);

    procedure FormNameSetting;
    procedure FontSetting;
  private
    procedure AdvStrinGridSetAllCheck(Sender: TObject;bchkState:Boolean);
  public
    { Public declarations }
    procedure Form_Close;
  end;

var
  fmAreaCodeAdmin: TfmAreaCodeAdmin;

implementation
uses
  uCommonVariable,
  uDataBase,
  uDBFormName,
  uFormUtil,
  uFunction,
  uFormFontUtil;

{$R *.dfm}


procedure TfmAreaCodeAdmin.AdvStrinGridSetAllCheck(Sender: TObject;
  bchkState: Boolean);
var
  i : integer;
begin
    for i:= 1 to (Sender as TAdvStringGrid).RowCount - 1  do
    begin
      (Sender as TAdvStringGrid).SetCheckBoxState(0,i,bchkState);
    end;
end;

procedure TfmAreaCodeAdmin.btn_InsertSaveClick(Sender: TObject);
var
  stParentCode : string;
  stChildCode : string;
  stName : string;
  stSql : string;
  bResult : Boolean;
begin
  inherited;
  stName := ed_InsertName.Text;
  if cmb_AddDongCode.ItemIndex < 0 then
  begin
    showmessage(stringReplace(dmFormName.GetFormMessage('2','M00015'),'$NAME',lb_CompanyAdd.Caption.Text,[rfReplaceAll]));
    Exit;
  end;
  stParentCode := AddDongCodeList.Strings[cmb_AddDongCode.ItemIndex];
  stChildCode := GetNextBuildingCode;
  if stName = '' then
  begin
    showmessage(stringReplace(dmFormName.GetFormMessage('2','M00015'),'$NAME',lb_DepartAdd.Caption.Text,[rfReplaceAll]));
    Exit;
  end;

  stSql := ' Insert Into TB_BUILDINGCODE ( ';
  stSql := stSql + 'GROUP_CODE,';
  stSql := stSql + 'BC_PARENTCODE,';
  stSql := stSql + 'BC_CHILDCODE,';
  stSql := stSql + 'BC_POSITION,';
  stSql := stSql + 'BC_NAME ) ';
  stSql := stSql + 'Values( ';
  stSql := stSql + '''' + G_stGroupCode + ''',';
  stSql := stSql + '''' + stParentCode + ''',';
  stSql := stSql + '''' + stChildCode + ''',';
  stSql := stSql + '2,';
  stSql := stSql + '''' + stName + ''') ';

  bResult := dmDataBase.ProcessExecSQL(stSql);
  if bResult then
  begin
    menuTab.ActiveTabIndex := 1;
    menuTabChange(self);
    PageTabCreate(L_nCurrentPageGroup,L_nCurrentPageList);
    ShowAreaCode('');
  end else
  begin
    showmessage(dmFormName.GetFormMessage('2','M00018'));
  end;

end;

procedure TfmAreaCodeAdmin.btn_SaveClick(Sender: TObject);
begin
  inherited;
  SaveUpdateCell;
end;

procedure TfmAreaCodeAdmin.btn_SearchClick(Sender: TObject);
begin
  L_nCurrentPageList := 1;
  PageTabCreate(0,L_nCurrentPageList);
  ShowAreaCode('');
end;

procedure TfmAreaCodeAdmin.btn_UpdateSaveClick(Sender: TObject);
var
  stOldParentCode : string;
  stParentCode : string;
  stChildCode : string;
  stName : string;
  stSql : string;
  bResult : Boolean;
begin
  inherited;
  stName := ed_UpdateAreaName.Text;
  stOldParentCode := ed_UpdateParentCode.Text;
  stChildCode := ed_UpdateChildCode.Text;
  if cmb_UpdateDongCode.ItemIndex > -1 then stParentCode := UpdateDongCodeList.Strings[cmb_UpdateDongCode.ItemIndex];
  if cmb_UpdateDongCode.ItemIndex < 0 then
  begin
    showmessage(stringReplace(dmFormName.GetFormMessage('2','M00015'),'$NAME',lb_CompanyUdate.Caption.Text,[rfReplaceAll]));
    Exit;
  end;
  if stName = '' then
  begin
    showmessage(stringReplace(dmFormName.GetFormMessage('2','M00015'),'$NAME',lb_departUpdate.Caption.Text,[rfReplaceAll]));
    Exit;
  end;
  stSql := ' Update TB_BUILDINGCODE set BC_NAME = ''' + stName + ''', ';
  stSql := stSql + ' BC_PARENTCODE = ''' + stParentCode + '''';
  stSql := stSql + ' Where GROUP_CODE = ''' + G_stGroupCode + ''' ';
  stSql := stSql + ' AND BC_PARENTCODE = ''' + stOldParentCode + '''';
  stSql := stSql + ' AND BC_CHILDCODE = ''' + stChildCode + ''' ';

  bResult := dmDataBase.ProcessExecSQL(stSql);
  if bResult then
  begin
    menuTab.ActiveTabIndex := 1;
    menuTabChange(self);
    PageTabCreate(L_nCurrentPageGroup,L_nCurrentPageList);
    ShowAreaCode('');
  end else
  begin
    showmessage(dmFormName.GetFormMessage('2','M00018'));
  end;

end;

function TfmAreaCodeAdmin.ChildCodeDelete(aChildCode: string): Boolean;
var
  stSql : string;
begin
    stSql := ' Delete From TB_BUILDINGCODE ';
    stSql := stSql + ' Where GROUP_CODE = ''' + G_stGroupCode + ''' ';
    stSql := stSql + ' AND BC_CHILDCODE = ''' + aChildCode + ''' ';

    result := dmDataBase.ProcessExecSQL(stSql);
end;

procedure TfmAreaCodeAdmin.cmb_ListDongCodeChange(Sender: TObject);
begin
  inherited;
  L_nCurrentPageList := 1;
  PageTabCreate(0,L_nCurrentPageList);
  ShowAreaCode('');
end;

procedure TfmAreaCodeAdmin.ed_areanameChange(Sender: TObject);
begin
  inherited;
  L_nCurrentPageList := 1;
  PageTabCreate(0,L_nCurrentPageList);
  ShowAreaCode('');
end;

procedure TfmAreaCodeAdmin.ed_InsertNameKeyPress(Sender: TObject;
  var Key: Char);
begin
  inherited;
  if Key = #13 then
  begin
    btn_InsertSaveClick(self);
  end;

end;

procedure TfmAreaCodeAdmin.ed_UpdateAreaNameKeyPress(Sender: TObject;
  var Key: Char);
begin
  inherited;
  if Key = #13 then
  begin
    btn_UpdateSaveClick(self);
  end;

end;

procedure TfmAreaCodeAdmin.FontSetting;
begin
  dmFormFontUtil.TravelFormFontSetting(self,G_stFontName,inttostr(G_nFontSize));
  dmFormFontUtil.TravelAdvOfficeTabSetOfficeStylerFontSetting(AdvOfficeTabSetOfficeStyler1, G_stFontName,inttostr(G_nFontSize));
  dmFormFontUtil.FormAdvOfficeTabSetOfficeStylerSetting(AdvOfficeTabSetOfficeStyler1,G_stFormStyle);
  dmFormFontUtil.FormAdvToolBarOfficeStylerSetting(AdvToolBarOfficeStyler1,G_stFormStyle);
  dmFormFontUtil.FormStyleSetting(self,AdvToolBarOfficeStyler1);

end;

procedure TfmAreaCodeAdmin.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['NAME'] := inttostr(FORMAREACODE);
  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['VALUE'] := 'FALSE';
  self.FindSubForm('Main').FindCommand('FORMENABLE').Execute;

  ListDongCodeList.Free;
  AddDongCodeList.Free;
  UpdateDongCodeList.Free;

  Action := caFree;
end;


procedure TfmAreaCodeAdmin.FormCreate(Sender: TObject);
begin
  Height := G_nChildFormDefaultHeight;
  L_nPageGroupMaxCount :=5 ; //한페이지 그룹에 해당하는 페이지수
  L_nPageListMaxCount :=16; //한페이지에 출력되는 리스트 갯수
  //L_nPageListMaxCount :=2; //한페이지에 출력되는 리스트 갯수
  ListDongCodeList := TStringList.Create;
  AddDongCodeList := TStringList.Create;
  UpdateDongCodeList := TStringList.Create;

  menuTab.ActiveTabIndex := 1;
  menuTabChange(self);
  FontSetting;
end;


procedure TfmAreaCodeAdmin.FormNameSetting;
begin
  Caption := dmFormName.GetFormMessage('1','M00013');
  menuTab.AdvOfficeTabs[0].Caption := dmFormName.GetFormMessage('1','M00035');
  menuTab.AdvOfficeTabs[1].Caption := dmFormName.GetFormMessage('1','M00037');
  menuTab.AdvOfficeTabs[2].Caption := dmFormName.GetFormMessage('1','M00038');
  dongCodeList.Caption.Text := dmFormName.GetFormMessage('1','M00037');
  dongCodeAdd.Caption.Text := dmFormName.GetFormMessage('1','M00038');
  dongCodeUpdate.Caption.Text := dmFormName.GetFormMessage('1','M00039');
  lb_Company.Caption.Text := dmFormName.GetFormMessage('4','M00004');
  lb_CompanyAdd.Caption.Text := dmFormName.GetFormMessage('4','M00004');
  lb_CompanyUdate.Caption.Text := dmFormName.GetFormMessage('4','M00004');
  lb_DepartCode.Caption.Text := dmFormName.GetFormMessage('4','M00005');
  lb_DepartAdd.Caption.Text := dmFormName.GetFormMessage('4','M00005');
  lb_departUpdate.Caption.Text := dmFormName.GetFormMessage('4','M00005');
  btn_Search.Caption := dmFormName.GetFormMessage('4','M00007');
  btn_InsertSave.Caption := dmFormName.GetFormMessage('4','M00014');
  btn_UpdateSave.Caption := dmFormName.GetFormMessage('4','M00014');
  btn_add.Caption :=  dmFormName.GetFormMessage('4','M00077');
  btn_Delete.Caption :=  dmFormName.GetFormMessage('4','M00078');
  pm_update.Caption := dmFormName.GetFormMessage('4','M00098');

  with sg_dongCode do
  begin
    cells[1,0] := dmFormName.GetFormMessage('4','M00004');
    cells[2,0] := dmFormName.GetFormMessage('4','M00005');
    Hint := dmFormName.GetFormMessage('2','M00012');
  end;
end;

procedure TfmAreaCodeAdmin.FormResize(Sender: TObject);
begin
  BodyPanel.Left := 0;
  BodyPanel.Top := 0;
  BodyPanel.Height := Height - menuTab.Height;

end;

procedure TfmAreaCodeAdmin.FormShow(Sender: TObject);
begin
  top := 0;
  Left := 0;
  Width := BodyPanel.Width;

  L_nCurrentPageGroup := 0;
  PageTabCreate(L_nCurrentPageGroup,1);
  ShowAreaCode('');

  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['NAME'] := inttostr(FORMAREACODE);
  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['VALUE'] := 'TRUE';
  self.FindSubForm('Main').FindCommand('FORMENABLE').Execute;
  FormNameSetting;
end;

procedure TfmAreaCodeAdmin.Form_Close;
begin
  Close;
end;

function TfmAreaCodeAdmin.GetNextBuildingCode: string;
var
  nChildCode : integer;
  stSql : string;
  TempAdoQuery : TADOQuery;
begin
  nChildCode := 1;
  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;

    stSql := 'Select Max(BC_CHILDCODE) as BC_CHILDCODE from TB_BUILDINGCODE ';

    with TempAdoQuery do
    begin
      Close;
      Sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordCount < 1 then Exit;

      if Not isDigit(FindField('BC_CHILDCODE').AsString) then Exit;
      nChildCode := strtoint(FindField('BC_CHILDCODE').AsString) + 1;

    end;
  Finally
    result := FillZeroNumber(nChildCode,G_nBuildingCodeLength);
    TempAdoQuery.Free;
    CoUninitialize;
  End;
end;

procedure TfmAreaCodeAdmin.lb_page1Click(Sender: TObject);
begin
  inherited;
  Try
    L_nCurrentPageList := TLabel(Sender).tag;
    PageTabCreate(L_nCurrentPageGroup,L_nCurrentPageList);
    ShowAreaCode('');
  Except
    Exit;
  End;

end;

procedure TfmAreaCodeAdmin.LoadParentCode(cmbBox: TComboBox;
  stringList: TStringList; aAll: Boolean);
var
  stSql : string;
  TempAdoQuery : TADOQuery;
begin
  cmbBox.Items.Clear;
  stringList.Clear;
  if aAll then
  begin
    cmbBox.Items.Add(dmFormName.GetFormMessage('3','M00007'));
    stringList.Add('');
  end;
  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;
    stSql := 'SELECT * FROM TB_BUILDINGCODE ';
    stSql := stSql + '  Where BC_POSITION = 1 ';
    stSql := stSql + ' ORDER BY idx  ';
    with TempAdoQuery do
    begin
      Close;
      sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordcount < 1 then Exit;
      while Not Eof do
      begin
        cmbBox.Items.Add(FindField('BC_NAME').AsString);
        stringList.Add(FindField('BC_CHILDCODE').AsString);
        Next;
      end;
      if cmbBox.Items.Count > 0 then cmbBox.ItemIndex := 0;
    end;
  Finally
    TempAdoQuery.Free;
    CoUninitialize;
  End;
end;

procedure TfmAreaCodeAdmin.menuTabChange(Sender: TObject);
var
  nIndex : integer;
  stSelectDongCode : string;
begin
  stSelectDongCode := '';
  if menuTab.ActiveTabIndex = 0 then //Ȩ
  begin
    if menuTab.AdvOfficeTabs.Items[0].Caption = dmFormName.GetFormMessage('1','M00035') then Close
    else
    begin
      menuTab.ActiveTabIndex := 1;
      menuTabChange(self);
    end;
  end else if menuTab.ActiveTabIndex = 1 then
  begin
    menuTab.AdvOfficeTabs.Items[0].Caption := dmFormName.GetFormMessage('1','M00035');
    dongCodeList.Visible := True;
    dongCodeAdd.Visible := False;
    dongCodeList.Align := alClient;
    dongCodeUpdate.Visible := False;

    if cmb_ListDongCode.ItemIndex > 0  then
    begin
      stSelectDongCode := ListDongCodeList.Strings[cmb_ListDongCode.ItemIndex];
    end;
    LoadParentCode(cmb_ListDongCode,ListDongCodeList,True);
    if stSelectDongCode <> '' then
    begin
      nIndex := ListDongCodeList.IndexOf(stSelectDongCode);
      cmb_ListDongCode.ItemIndex := nIndex;
    end;

  end else if menuTab.ActiveTabIndex = 2 then
  begin
    menuTab.AdvOfficeTabs.Items[0].Caption := dmFormName.GetFormMessage('1','M00040');
    dongCodeList.Visible := False;
    dongCodeAdd.Visible := True;
    dongCodeAdd.Align := alClient;
    ed_InsertName.Text := '';
    dongCodeUpdate.Visible := False;
    LoadParentCode(cmb_AddDongCode,AddDongCodeList,False);
    if cmb_ListDongCode.ItemIndex > 0 then  //동이 선택되어 있으면
    begin
      nIndex := AddDongCodeList.IndexOf(ListDongCodeList.Strings[cmb_ListDongCode.ItemIndex]);
      if nIndex > -1 then cmb_AddDongCode.ItemIndex := nIndex;
    end;
  end;
end;

procedure TfmAreaCodeAdmin.PageTabCreate(aPageGroup,aCurrentPage: integer);
var
  stSql : string;
  TempAdoQuery : TADOQuery;
  i : integer;
  oLabel : TLabel;
  nCurrentPageStart : integer;
  nCurrentPageNo : integer;
begin

end;

function TfmAreaCodeAdmin.ParentCodeDelete(aParentCode: string): Boolean;
var
  stSql : string;
  TempAdoQuery : TADOQuery;
begin
  result := True;
  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;
    stSql := 'Select * from TB_BUILDINGCODE ';
    stSql := stSql + ' Where GROUP_CODE = ''' + G_stGroupCode + ''' ';
    stSql := stSql + ' AND BC_PARENTCODE = ''' + aParentCode + ''' ';

    with TempAdoQuery do
    begin
      Close;
      Sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordcount < 1 then Exit;
      while Not Eof do
      begin
        ParentCodeDelete(FindField('BC_CHILDCODE').AsString);
        Next;
      end;
    end;

    stSql := ' Delete From TB_BUILDINGCODE ';
    stSql := stSql + ' Where GROUP_CODE = ''' + G_stGroupCode + ''' ';
    stSql := stSql + ' AND BC_PARENTCODE = ''' + aParentCode + ''' ';

    result := dmDataBase.ProcessExecSQL(stSql);

  Finally
    TempAdoQuery.Free;
    CoUninitialize;
  End;
end;

procedure TfmAreaCodeAdmin.pm_updateClick(Sender: TObject);
begin
  inherited;
  sg_dongCodeDblClick(sg_dongCode);
end;

procedure TfmAreaCodeAdmin.SaveUpdateCell;
var
  stParentCode : string;
  stChildCode : string;
  stName : string;
  stSql : string;
  bResult : Boolean;
begin

  with sg_dongCode do
  begin
    stParentCode := cells[3,L_CurrentSaveRow];
    stChildCode := cells[4,L_CurrentSaveRow];
    stName := cells[1,L_CurrentSaveRow];

    if stParentCode = '' then stParentCode := FillZeroNumber(0,G_nBuildingCodeLength);
    if stChildCode = '' then Exit;

    stSql := ' Update TB_BUILDINGCODE set BC_NAME = ''' + stName + ''' ';
    stSql := stSql + ' Where GROUP_CODE = ''' + G_stGroupCode + ''' ';
    stSql := stSql + ' AND BC_PARENTCODE = ''' + stParentCode + ''' ';
    stSql := stSql + ' AND BC_CHILDCODE = ''' + stChildCode + ''' ';

    bResult := dmDataBase.ProcessExecSQL(stSql);

  end;

end;

procedure TfmAreaCodeAdmin.sg_dongCodeCheckBoxClick(Sender: TObject; ACol,
  ARow: Integer; State: Boolean);
begin
  if ARow = 0 then //전체선택 또는 해제
  begin
    if State then L_nCheckCount := (Sender as TAdvStringGrid).RowCount - 1
    else L_nCheckCount := 0;
    AdvStrinGridSetAllCheck(Sender,State);
  end else
  begin
    if State then L_nCheckCount := L_nCheckCount + 1
    else L_nCheckCount := L_nCheckCount - 1 ;
  end;

end;

procedure TfmAreaCodeAdmin.sg_dongCodeColChanging(Sender: TObject; OldCol,
  NewCol: Integer; var Allow: Boolean);
begin
  inherited;
  with sg_dongCode do
  begin
    if NewCol = 0 then Options := Options + [goEditing]
    else Options := Options - [goEditing];
  end;

end;

procedure TfmAreaCodeAdmin.sg_dongCodeDblClick(Sender: TObject);
var
  nIndex : integer;
begin
  inherited;

  LoadParentCode(cmb_UpdateDongCode,UpdateDongCodeList,False);
  with sg_dongCode do
  begin
    if cells[4,Row] = '' then Exit;
    ed_UpdateAreaName.Text := cells[2,Row];
    if Not isDigit(cells[3,Row]) then
    begin
      showmessage(dmFormName.GetFormMessage('2','M00013'));
      Exit;
    end;
    nIndex := UpdateDongCodeList.IndexOf(cells[3,Row]);
    if nIndex < 0 then
    begin
      showmessage(dmFormName.GetFormMessage('2','M00014'));
      Exit;
    end;
    cmb_UpdateDongCode.ItemIndex := nIndex;
    ed_UpdateParentCode.Text := cells[3,Row];
    ed_UpdateChildCode.Text := cells[4,Row];
  end;
  menuTab.AdvOfficeTabs.Items[0].Caption := dmFormName.GetFormMessage('1','M00040');
  dongCodeUpdate.Visible := True;
  dongCodeUpdate.Align := alClient;
  dongCodeList.Visible := False;
  dongCodeAdd.Visible := False;

  ed_UpdateAreaName.SelectAll;
  ed_UpdateAreaName.SetFocus;

end;

procedure TfmAreaCodeAdmin.sg_dongCodeKeyPress(Sender: TObject;
  var Key: Char);
begin
  inherited;
  if Key = #13 then
  begin
    L_CurrentSaveRow := sg_dongcode.Row;
    //SaveUpdateCell;
  end;

end;

procedure TfmAreaCodeAdmin.sg_dongCodeKeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  L_CurrentSaveRow := sg_dongcode.Row;
  if (Key <> VK_RETURN) and
     (Key <> VK_UP) and
     (Key <> VK_DOWN) then UpdateCell;

end;

procedure TfmAreaCodeAdmin.ShowAreaCode(aCurrentCode: string; aTopRow: integer);
var
  stSql : string;
  TempAdoQuery : TADOQuery;
  nRow : integer;
begin
  GridInit(sg_dongcode,3,2,true);
  L_nCheckCount := 0;

  stSql := 'SELECT a.*,b.BC_NAME as BC_DONGNAME FROM TB_BUILDINGCODE a ';
  stSql := stSql + '  Left Join TB_BUILDINGCODE b ';
  stSql := stSql + '  ON(a.GROUP_CODE = b.GROUP_CODE ';
  stSql := stSql + '  AND a.BC_PARENTCODE = b.BC_CHILDCODE ';
  stSql := stSql + '  AND b.BC_POSITION = 1) ';
  stSql := stSql + '  Where a.BC_POSITION = 2 ';
  if cmb_ListDongCode.ItemIndex > 0 then
  begin
    stSql := stSql + ' AND a.BC_PARENTCODE = ''' + ListDongCodeList.Strings[cmb_ListDongCode.ItemIndex] + ''' ';
  end;
  if ed_Areaname.Text <> '' then
  begin
    stSql := stSql + ' AND a.BC_NAME Like ''%' + ed_Areaname.Text + '%'' ';
  end;
  stSql := stSql + ' ORDER BY a.idx  ';

  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;

    with TempAdoQuery do
    begin
      Close;
      sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordcount < 1 then Exit;
      with sg_dongCode do
      begin
        nRow := 1;
        RowCount := RecordCount + 1;
        while Not Eof do
        begin
          AddCheckBox(0,nRow,False,False);
          cells[1,nRow] := FindField('BC_DONGNAME').AsString;
          cells[2,nRow] := FindField('BC_NAME').AsString;
          cells[3,nRow] := FindField('BC_PARENTCODE').AsString;
          cells[4,nRow] := FindField('BC_CHILDCODE').AsString;
          if (FindField('BC_CHILDCODE').AsString )  = aCurrentCode then
          begin
            SelectRows(nRow,1);
          end;

          nRow := nRow + 1;
          Next;
        end;
        if aTopRow = 0 then
        begin
          if Row > (L_nPageListMaxCount - 1) then TopRow := Row - L_nPageListMaxCount;
        end else
        begin
          TopRow := aTopRow;
        end;
      end;

    end;
  Finally
    TempAdoQuery.Free;
    CoUninitialize;
  End;

end;

procedure TfmAreaCodeAdmin.btn_addClick(Sender: TObject);
begin
  inherited;
  menutab.ActiveTabIndex := 2;
  menutabChange(self);
end;

procedure TfmAreaCodeAdmin.btn_DeleteClick(Sender: TObject);
var
  i : integer;
  bChkState : Boolean;
  stMessage : string;
begin
  inherited;
  if L_nCheckCount = 0 then
  begin
    showmessage(dmFormName.GetFormMessage('2','M00019'));
    Exit;
  end;
  stMessage := dmFormName.GetFormMessage('2','M00020');
  stMessage := stringReplace(stMessage,'$Count',inttostr(L_nCheckCount),[]);
  if (Application.MessageBox(PChar(stMessage),pchar(dmFormName.GetFormMessage('3','M00008')),MB_OKCANCEL) = IDCANCEL)  then Exit;
  With sg_DongCode do
  begin
    for i := 1 to RowCount - 1 do
    begin
      GetCheckBoxState(0,i, bChkState);
      if bChkState then
      begin
        ParentCodeDelete(Cells[4,i]);  //해당 ParentCode 아래 있는 모든 코드 삭제
        ChildCodeDelete(Cells[4,i]);
      end;
    end;
  end;
  PageTabCreate(L_nCurrentPageGroup,L_nCurrentPageList);
  ShowAreaCode('');

end;

procedure TfmAreaCodeAdmin.UpdateCell;
var
  Rect: TRect;
begin
{  with sg_dongCode do
  begin
    Rect := CellRect(2, L_CurrentSaveRow);
    btn_Save.Left := Rect.Left ;
    btn_Save.Top :=  Rect.Top ;
    btn_Save.Width := Rect.Right - Rect.Left;
    btn_Save.Height := (Rect.Bottom - Rect.Top);
    btn_Save.BringToFront;   // comboBox1을 최상위로 옮기기 <> SendToBack
    btn_Save.Visible := True;
  end;  }
end;

initialization
  RegisterClass(TfmAreaCodeAdmin);
Finalization
  UnRegisterClass(TfmAreaCodeAdmin);

end.
