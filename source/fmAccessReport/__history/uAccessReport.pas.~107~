unit uAccessReport;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, W7Classes, W7Panels, AdvOfficeTabSet,
  AdvOfficeTabSetStylers, AdvSmoothPanel, Vcl.ExtCtrls, AdvSmoothLabel,
  Vcl.StdCtrls, AdvEdit, Vcl.Buttons, Vcl.Grids, AdvObj, BaseGrid, AdvGrid,
  AdvToolBtn,ADODB,ActiveX, uSubForm, CommandArray, AdvCombo, AdvGroupBox,
  Vcl.Mask, AdvSpin, AdvOfficeButtons, AdvPanel, Vcl.ComCtrls, AdvListV,
  Vcl.ImgList, Vcl.Menus, AdvMenus, AdvExplorerTreeview, paramtreeview,
  System.iniFiles, Vcl.Samples.Gauges, AdvToolBar,
  AdvToolBarStylers;


type
  TfmAccessReport = class(TfmASubForm)
    AdvOfficeTabSetOfficeStyler1: TAdvOfficeTabSetOfficeStyler;
    Image1: TImage;
    BodyPanel: TW7Panel;
    menuTab: TAdvOfficeTabSet;
    pan_DoorList: TAdvPanel;
    pan_CardListHeader: TAdvSmoothPanel;
    lb_Date: TAdvSmoothLabel;
    cmb_ListDongCode: TComboBox;
    ImageList1: TImageList;
    toolslist: TImageList;
    lb_Door: TAdvSmoothLabel;
    dt_endDate: TDateTimePicker;
    btn_Search: TSpeedButton;
    btn_Excel: TSpeedButton;
    btn_Print: TSpeedButton;
    sg_report: TAdvStringGrid;
    SaveDialog1: TSaveDialog;
    pan_gauge: TPanel;
    lb_Message: TLabel;
    Gauge1: TGauge;
    cmb_Company: TComboBox;
    lb_Company: TAdvSmoothLabel;
    lb_Depart: TAdvSmoothLabel;
    cmb_Depart: TComboBox;
    lb_Gubun: TAdvSmoothLabel;
    ComboBox3: TComboBox;
    AdvToolBarOfficeStyler1: TAdvToolBarOfficeStyler;
    dt_StartDate: TDateTimePicker;
    cmb_EtcSearch1: TComboBox;
    ed_EtcSearch1: TAdvEdit;
    ed_EtcSearch2: TAdvEdit;
    cmb_EtcSearch2: TComboBox;
    cmb_Condition1: TAdvComboBox;
    cmb_Condition2: TAdvComboBox;
    procedure menuTabChange(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure ed_AddNameKeyPress(Sender: TObject; var Key: Char);
    procedure FormActivate(Sender: TObject);
    procedure AdvSmoothPanel8Resize(Sender: TObject);
    procedure btn_SearchClick(Sender: TObject);
    procedure cmb_ListDongCodeChange(Sender: TObject);
    procedure ed_nameKeyPress(Sender: TObject; var Key: Char);
    procedure btn_ExcelClick(Sender: TObject);
    procedure btn_PrintClick(Sender: TObject);
    procedure sg_reportResize(Sender: TObject);
    procedure cmb_CompanyChange(Sender: TObject);
    procedure dt_StartDateChange(Sender: TObject);
    procedure sg_reportColumnMoved(Sender: TObject; FromIndex,
      ToIndex: Integer);
  private
    ListDoorCodeList : TStringList;
    ListCompanyCodeList : TStringList;
    ListDepartCodeList : TStringList;
    ReportHeaderNameList : TStringList;
    ReportFieldNameList : TStringList;
    L_arrAccessReportIndexArray:Array of integer; //출입이벤트 리스트 순서 배열
    L_arrRelAccessReportIndexArray:Array of integer; //출입이벤트 실제 위치
    L_arrAccessReportShowTable : Array of integer;  //출입이벤트 조회 항목테이블
    L_arrAccessReportSizeTable : Array of integer;  //출입이벤트 Cell Size
    { Private declarations }
    function AccessReportHeaderNameSetting(aList: TAdvStringGrid):Boolean;
    function AccessReportFieldNameSetting:Boolean;
    function ReportHeaderNameSetting:Boolean;
    procedure FormNameSetting;
    procedure FontSetting;
    procedure ChangeAccessReportIndex(FromIndex,ToIndex:integer);
  private
    procedure LoadDeviceCode(cmbBox:TComboBox;aList:TStringList;aAll:Boolean);
    procedure LoadParentCode(cmbBox:TComboBox;stringList:TStringList;aAll:Boolean);
    procedure LoadChildCode(aParentCode:string;aPosition:integer;cmbBox:TComboBox;aList:TStringList;aAll:Boolean);

    procedure AdvStrinGridSetAllCheck(Sender: TObject;bchkState:Boolean);

    function GetstChangeStateName(aInputType:string):string;
  private
    procedure SearchAccessReport;
  public
    { Public declarations }
    procedure Form_Close;
  end;

var
  fmAccessReport: TfmAccessReport;

implementation
uses
  uCommonVariable,
  uDataBase,
  uDBFormName,
  uFormUtil,
  uFunction,
  udmCardPermit,
  uExcelSave,
  uFormFontUtil;

{$R *.dfm}


function TfmAccessReport.AccessReportFieldNameSetting: Boolean;
begin
  ReportFieldNameList.Clear;
  ReportFieldNameList.Add('ACTIME');
  ReportFieldNameList.Add('DO_NAME');
  ReportFieldNameList.Add('DONGNAME');
  ReportFieldNameList.Add('AREANAME');
  ReportFieldNameList.Add('CA_POSITION');
  ReportFieldNameList.Add('CA_NAME');
  ReportFieldNameList.Add('CA_CARDNO');
  ReportFieldNameList.Add('CA_TELNUM');
  ReportFieldNameList.Add('CA_CODE');
  ReportFieldNameList.Add('AC_INPUTTYPE');
  ReportFieldNameList.Add('PE_PERMITNAME');

end;

function TfmAccessReport.AccessReportHeaderNameSetting(
  aList: TAdvStringGrid): Boolean;
var
  i : integer;
begin
  aList.ColCount := ReportHeaderNameList.Count;
  for i := LOW(L_arrAccessReportIndexArray) to HIGH(L_arrAccessReportIndexArray) do
  begin
    if (aList.ColCount - 1) < i then Exit;
    if (ReportHeaderNameList.Count - 1) < i then Exit;

    aList.cells[L_arrAccessReportIndexArray[i],0] := ReportHeaderNameList[i];
  end;
end;

procedure TfmAccessReport.AdvSmoothPanel8Resize(Sender: TObject);
var
  nWidth : integer;
begin
  inherited;
end;

procedure TfmAccessReport.AdvStrinGridSetAllCheck(Sender: TObject;
  bchkState: Boolean);
var
  i : integer;
begin
    for i:= 1 to (Sender as TAdvStringGrid).RowCount - 1  do
    begin
      (Sender as TAdvStringGrid).SetCheckBoxState(0,i,bchkState);
    end;
end;

procedure TfmAccessReport.btn_ExcelClick(Sender: TObject);
var
  stRefFileName,stSaveFileName:String;
  stPrintRefPath : string;
  nExcelRowStart:integer;
  ini_fun : TiniFile;
  aFileName : string;
  stTitle : string;
begin
  btn_Excel.Enabled := False;
  SaveDialog1.FileName := dmFormName.GetFormMessage('3','M00003');
  SaveDialog1.DefaultExt := 'CSV';
  SaveDialog1.Filter := 'CSV Files (*.CSV)|*.CSV|All Files (*.*)|*.*';
  if SaveDialog1.Execute then
  begin
    stSaveFileName := SaveDialog1.FileName;

    if SaveDialog1.FileName <> '' then
    begin
      //sg_Report.SaveToXLS(stSaveFileName,True);
      if fileexists(stSaveFileName) then
        deletefile(stSaveFileName);
      if G_nLangeType =  1 then sg_Report.SaveToCSV(stSaveFileName,False)
      else sg_Report.SaveToCSV(stSaveFileName,True);
      //advgridexcelio1.XLSExport(stSaveFileName);
    end;
  end;
  btn_Excel.Enabled := True;
  Exit;
  (*
  btn_Excel.Enabled := False;
  Screen.Cursor:= crHourGlass;
  stTitle := dmFormName.GetFormMessage('3','M00002');
  ini_fun := TiniFile.Create(G_stExeFolder + '\print.ini');
  stPrintRefPath := G_stExeFolder + '\..\print\' ;
  stPrintRefPath := ini_fun.ReadString('Config','PrintRefPath',stPrintRefPath);
  stRefFileName  := ini_fun.ReadString('출입보고서','참조파일','ACReport.xls');
  stRefFileName := stPrintRefPath + stRefFileName;
  nExcelRowStart := ini_fun.ReadInteger('출입보고서','시작위치',6);
  ini_fun.Free;

  aFileName:='출입보고서';
  SaveDialog1.FileName := aFileName;
  if SaveDialog1.Execute then
  begin
    stSaveFileName := SaveDialog1.FileName;

    if SaveDialog1.FileName <> '' then
    begin
      pan_gauge.Visible := True;
      Screen.Cursor:= crHourGlass;
      dmExcelSave.ExcelPrintOut(sg_Report,stRefFileName,stSaveFileName,True,nExcelRowStart,stTitle,False,False,Gauge1);
    end;
  end;
  pan_gauge.Visible := False;
  Screen.Cursor:= crDefault;
  btn_Excel.Enabled := True;  *)
end;

procedure TfmAccessReport.btn_PrintClick(Sender: TObject);
var
  stRefFileName,stSaveFileName:String;
  stPrintRefPath : string;
  nExcelRowStart:integer;
  ini_fun : TiniFile;
  stTitle : string;
begin
  sg_Report.Print;
  Exit;
(*  btn_Print.Enabled := False;
  Screen.Cursor:= crHourGlass;
  stTitle := '출입이력보고서';
  ini_fun := TiniFile.Create(G_stExeFolder + '\print.ini');
  stPrintRefPath := G_stExeFolder + '\..\print\' ;
  stPrintRefPath := ini_fun.ReadString('환경설정','PrintRefPath',stPrintRefPath);
  stRefFileName  := ini_fun.ReadString('출입보고서','참조파일','ACReport.xls');
  stRefFileName := stPrintRefPath + stRefFileName;
  nExcelRowStart := ini_fun.ReadInteger('출입보고서','시작위치',6);
  ini_fun.Free;

  dmExcelSave.ExcelPrintOut(sg_Report,stRefFileName,stSaveFileName,False,nExcelRowStart,stTitle,False,False,Gauge1);

  btn_Print.Enabled := True;
  Screen.Cursor:= crDefault; *)

end;

procedure TfmAccessReport.btn_SearchClick(Sender: TObject);
begin
  inherited;
  SearchAccessReport;
end;

procedure TfmAccessReport.ChangeAccessReportIndex(FromIndex, ToIndex: integer);
var
  i : integer;
  nChangData : integer;
begin
  nChangData := L_arrRelAccessReportIndexArray[FromIndex];
  if FromIndex > ToIndex then   //뒤에 있는 놈이 앞으로 오는 경우
  begin
    for i := FromIndex downto ToIndex + 1 do
    begin
      L_arrRelAccessReportIndexArray[i] := L_arrRelAccessReportIndexArray[i - 1];
    end;
    L_arrRelAccessReportIndexArray[ToIndex] := nChangData;
  end else   //앞에 있는 놈이 뒤로 가는 경우
  begin
    for i := FromIndex to ToIndex - 1 do
    begin
      L_arrRelAccessReportIndexArray[i] := L_arrRelAccessReportIndexArray[i + 1];
    end;
    L_arrRelAccessReportIndexArray[ToIndex] := nChangData;
  end;

  for i := LOW(L_arrRelAccessReportIndexArray) to HIGH(L_arrRelAccessReportIndexArray) do
  begin
    L_arrAccessReportIndexArray[L_arrRelAccessReportIndexArray[i]] := i;
  end;

end;

procedure TfmAccessReport.cmb_CompanyChange(Sender: TObject);
var
  stParentCode : string;
begin
  inherited;
  if cmb_Company.ItemIndex > -1 then
  stParentCode := ListCompanyCodeList.Strings[cmb_Company.ItemIndex];
  LoadChildCode(stParentCode,2,cmb_Depart,ListDepartCodeList,True);
end;

procedure TfmAccessReport.cmb_ListDongCodeChange(Sender: TObject);
begin
  inherited;
//  SearchAccessReport;
end;

procedure TfmAccessReport.dt_StartDateChange(Sender: TObject);
begin
  inherited;
//  SearchAccessReport;

end;

procedure TfmAccessReport.ed_AddNameKeyPress(Sender: TObject;
  var Key: Char);
begin
  inherited;
  if Key = #13 then
  begin
    Perform(WM_NEXTDLGCTL,0,0);
  end;
end;

procedure TfmAccessReport.ed_nameKeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
  if Key = #13 then
  begin
    Key := #0;
    SearchAccessReport;
  end;

end;

procedure TfmAccessReport.FontSetting;
begin
  dmFormFontUtil.TravelFormFontSetting(self,G_stFontName,inttostr(G_nFontSize));
  dmFormFontUtil.TravelAdvOfficeTabSetOfficeStylerFontSetting(AdvOfficeTabSetOfficeStyler1, G_stFontName,inttostr(G_nFontSize));
  dmFormFontUtil.FormAdvOfficeTabSetOfficeStylerSetting(AdvOfficeTabSetOfficeStyler1,G_stFormStyle);
  dmFormFontUtil.FormAdvToolBarOfficeStylerSetting(AdvToolBarOfficeStyler1,G_stFormStyle);
  dmFormFontUtil.FormStyleSetting(self,AdvToolBarOfficeStyler1);

end;

procedure TfmAccessReport.FormActivate(Sender: TObject);
begin
  inherited;
  WindowState := wsMaximized;
end;

procedure TfmAccessReport.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['NAME'] := inttostr(FORMACCESSREPORT);
  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['VALUE'] := 'FALSE';
  self.FindSubForm('Main').FindCommand('FORMENABLE').Execute;

  ListDoorCodeList.Free;
  ListCompanyCodeList.Free;
  ListDepartCodeList.Free;

  Action := caFree;
end;

procedure TfmAccessReport.FormCreate(Sender: TObject);
begin

  ListDoorCodeList := TStringList.Create;
  ListCompanyCodeList := TStringList.Create;
  ListDepartCodeList := TStringList.Create;
  ReportFieldNameList := TStringList.Create;
  ReportHeaderNameList := TStringList.Create;

  menuTab.ActiveTabIndex := 1;
  menuTabChange(self);

  LoadDeviceCode(cmb_ListDongCode,ListDoorCodeList,True);
  LoadParentCode(cmb_Company,ListCompanyCodeList,True);
  cmb_CompanyChange(self);
  dt_StartDate.Date := Now;
  dt_endDate.Date := now;
  FontSetting;
end;


procedure TfmAccessReport.FormNameSetting;
begin
  Caption := dmFormName.GetFormMessage('1','M00023');
  menuTab.AdvOfficeTabs[0].Caption := dmFormName.GetFormMessage('1','M00035');
  menuTab.AdvOfficeTabs[1].Caption := dmFormName.GetFormMessage('1','M00036');
  pan_CardListHeader.Caption.Text := dmFormName.GetFormMessage('1','M00023');
  lb_Date.Caption.Text := dmFormName.GetFormMessage('4','M00001');
  lb_Door.Caption.Text := dmFormName.GetFormMessage('4','M00002');
  lb_Gubun.Caption.Text := dmFormName.GetFormMessage('4','M00003');
  lb_Company.Caption.Text := dmFormName.GetFormMessage('4','M00004');
  lb_Depart.Caption.Text := dmFormName.GetFormMessage('4','M00005');
  btn_Search.Caption :=  dmFormName.GetFormMessage('4','M00007');
  btn_Excel.Caption :=  dmFormName.GetFormMessage('4','M00008');
  btn_Print.Caption :=  dmFormName.GetFormMessage('4','M00009');

(*  with sg_report do
  begin
    cells[0,0] := dmFormName.GetFormMessage('4','M00010');
    cells[1,0] := dmFormName.GetFormMessage('4','M00002');
    cells[2,0] := dmFormName.GetFormMessage('4','M00004');
    cells[3,0] := dmFormName.GetFormMessage('4','M00005');
    cells[4,0] := dmFormName.GetFormMessage('4','M00018');
    cells[5,0] := dmFormName.GetFormMessage('4','M00006');
    cells[6,0] := dmFormName.GetFormMessage('4','M00012');
    cells[7,0] := dmFormName.GetFormMessage('4','M00019');
    cells[8,0] := dmFormName.GetFormMessage('4','M00011');
    cells[9,0] := dmFormName.GetFormMessage('4','M00003');
    cells[10,0] := dmFormName.GetFormMessage('4','M00076');
  end;
*)

  lb_Message.Caption := dmFormName.GetFormMessage('2','M00011');

  cmb_EtcSearch1.Clear;
  cmb_EtcSearch1.Items.Add(dmFormName.GetFormMessage('4','M00006'));
  cmb_EtcSearch1.Items.Add(dmFormName.GetFormMessage('4','M00018'));
  cmb_EtcSearch1.Items.Add(dmFormName.GetFormMessage('4','M00011'));
  cmb_EtcSearch1.Items.Add(dmFormName.GetFormMessage('4','M00019'));
  cmb_EtcSearch1.ItemIndex := 0;

  cmb_EtcSearch2.Clear;
  cmb_EtcSearch2.Items.Add(dmFormName.GetFormMessage('4','M00006'));
  cmb_EtcSearch2.Items.Add(dmFormName.GetFormMessage('4','M00018'));
  cmb_EtcSearch2.Items.Add(dmFormName.GetFormMessage('4','M00011'));
  cmb_EtcSearch2.Items.Add(dmFormName.GetFormMessage('4','M00019'));
  cmb_EtcSearch2.ItemIndex := 1;

  cmb_Condition1.Clear;
  cmb_Condition1.Items.Add(dmFormName.GetFormMessage('4','M00137'));
  cmb_Condition1.Items.Add(dmFormName.GetFormMessage('4','M00138'));
  cmb_Condition1.Items.Add(dmFormName.GetFormMessage('4','M00139'));
  cmb_Condition1.ItemIndex := 0;
  cmb_Condition2.Clear;
  cmb_Condition2.Items.Add(dmFormName.GetFormMessage('4','M00137'));
  cmb_Condition2.Items.Add(dmFormName.GetFormMessage('4','M00138'));
  cmb_Condition2.Items.Add(dmFormName.GetFormMessage('4','M00139'));
  cmb_Condition2.ItemIndex := 0;

end;

procedure TfmAccessReport.FormShow(Sender: TObject);
begin
  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['NAME'] := inttostr(FORMACCESSREPORT);
  self.FindSubForm('Main').FindCommand('FORMENABLE').Params.Values['VALUE'] := 'TRUE';
  self.FindSubForm('Main').FindCommand('FORMENABLE').Execute;

  FormNameSetting;
  AccessReportHeaderNameSetting(sg_Report);
  AccessReportFieldNameSetting;
  SearchAccessReport;
end;

procedure TfmAccessReport.Form_Close;
begin
  Close;
end;




function TfmAccessReport.GetstChangeStateName(aInputType: string): string;
begin
  case aInputType[1] of
    'c' : begin
      result := dmFormName.GetFormMessage('3','M00004');
    end;
    'p' : begin
      result := dmFormName.GetFormMessage('3','M00005');
    end;
    'm' : begin
      result := dmFormName.GetFormMessage('3','M00006');
    end;
    else begin
      result := aInputType;
    end;
  end;
end;

procedure TfmAccessReport.LoadChildCode(aParentCode: string; aPosition: integer;
  cmbBox: TComboBox; aList: TStringList; aAll: Boolean);
var
  stSql : string;
  TempAdoQuery : TADOQuery;
begin
  cmbBox.Items.Clear;
  aList.Clear;
  if aAll then
  begin
    cmbBox.Items.Add(dmFormName.GetFormMessage('3','M00007'));
    aList.Add('');
    cmbBox.ItemIndex := 0;
  end;
  if aParentCode = '' then Exit;
  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;
    stSql := 'SELECT * FROM TB_BUILDINGCODE ';
    stSql := stSql + '  Where BC_POSITION = ' + inttostr(aPosition);
    stSql := stSql + '  AND BC_PARENTCODE = ''' + aParentCode + ''' ';
    stSql := stSql + '  ORDER BY idx  ';
    with TempAdoQuery do
    begin
      Close;
      sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordcount < 1 then Exit;
      while Not Eof do
      begin
        cmbBox.Items.Add(FindField('BC_NAME').AsString);
        aList.Add(FindField('BC_CHILDCODE').AsString);
        Next;
      end;
      if cmbBox.Items.Count > 0 then cmbBox.ItemIndex := 0;
    end;
  Finally
    TempAdoQuery.Free;
    CoUninitialize;
  End;
end;

procedure TfmAccessReport.LoadDeviceCode(cmbBox: TComboBox; aList: TStringList; aAll: Boolean);
var
  stSql : string;
  TempAdoQuery : TADOQuery;
begin
  cmbBox.Items.Clear;
  aList.Clear;
  if aAll then
  begin
    cmbBox.Items.Add(dmFormName.GetFormMessage('3','M00007'));
    aList.Add('');
    cmbBox.ItemIndex := 0;
  end;

  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;
    stSql := 'SELECT * FROM TB_DOOR ';
    stSql := stSql + '  ORDER BY idx  ';
    with TempAdoQuery do
    begin
      Close;
      sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordcount < 1 then Exit;
      while Not Eof do
      begin
        cmbBox.Items.Add(FindField('DO_NAME').AsString);
        aList.Add(FillZeroNumber(FindField('ND_NODENO').AsInteger,G_nNodeCodeLength) + FillZeroNumber(strtoint(FindField('DE_DEVICEID').AsString),G_nDeviceCodeLength) + FillZeroNumber(FindField('DO_DOORNO').AsInteger,G_nDoorCodeLength));
        Next;
      end;
      if cmbBox.Items.Count > 0 then cmbBox.ItemIndex := 0;
    end;
  Finally
    TempAdoQuery.Free;
    CoUninitialize;
  End;
end;



procedure TfmAccessReport.LoadParentCode(cmbBox: TComboBox;
  stringList: TStringList; aAll: Boolean);
var
  stSql : string;
  TempAdoQuery : TADOQuery;
begin
  cmbBox.Items.Clear;
  stringList.Clear;
  if aAll then
  begin
    cmbBox.Items.Add(dmFormName.GetFormMessage('3','M00007'));
    stringList.Add('');
    cmbBox.ItemIndex := 0;
  end;
  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;
    stSql := 'SELECT * FROM TB_BUILDINGCODE ';
    stSql := stSql + '  Where BC_POSITION = 1 ';
    stSql := stSql + ' ORDER BY idx  ';
    with TempAdoQuery do
    begin
      Close;
      sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordcount < 1 then Exit;
      while Not Eof do
      begin
        cmbBox.Items.Add(FindField('BC_NAME').AsString);
        stringList.Add(FindField('BC_CHILDCODE').AsString);
        Next;
      end;
      if cmbBox.Items.Count > 0 then cmbBox.ItemIndex := 0;
    end;
  Finally
    TempAdoQuery.Free;
    CoUninitialize;
  End;
end;

procedure TfmAccessReport.menuTabChange(Sender: TObject);
var
  stBuildingCode : string;
  stAreaCode : string;
  nIndex : integer;
begin
  if menuTab.ActiveTabIndex = 0 then //Ȩ
  begin
    if menuTab.AdvOfficeTabs.Items[0].Caption = dmFormName.GetFormMessage('1','M00035') then Close
    else
    begin
      menuTab.ActiveTabIndex := 1;
      menuTabChange(self);
    end;
  end;
end;


function TfmAccessReport.ReportHeaderNameSetting: Boolean;
begin
  ReportHeaderNameList.Clear;
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00010'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00002'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00004'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00005'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00018'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00006'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00012'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00019'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00011'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00003'));
  ReportHeaderNameList.Add(dmFormName.GetFormMessage('4','M00076'));

  result := True;

end;

procedure TfmAccessReport.SearchAccessReport;
var
  stSql : string;
  TempAdoQuery : TADOQuery;
  nRow : integer;
  stStartDate : string;
  stEndDate : string;
  stNodeNo : string;
  stDeviceID : string;
  stDoorNo : string;
  stChangeStateName : string;
  stCompanyCode : string;
  stDepartCode : string;
begin
  btn_Excel.Enabled := False;
  btn_Print.Enabled := False;
  stStartDate := FormatDateTime('yyyymmdd',dt_StartDate.DateTime);
  stEndDate := FormatDateTime('yyyymmdd',dt_endDate.DateTime);
  if cmb_ListDongCode.ItemIndex > 0 then
  begin
    stNodeNo := copy(ListDoorCodeList.strings[cmb_ListDongCode.ItemIndex],1,G_nNodeCodeLength);
    stDeviceID := copy(ListDoorCodeList.strings[cmb_ListDongCode.ItemIndex],G_nNodeCodeLength + 1,G_nDeviceCodeLength);
    stDoorNo := copy(ListDoorCodeList.strings[cmb_ListDongCode.ItemIndex],G_nNodeCodeLength + G_nDeviceCodeLength + 1,G_nDoorCodeLength);
  end;

  stCompanyCode := '';
  stDepartCode := '';
  if cmb_Company.ItemIndex > 0 then
  begin
    stCompanyCode := ListCompanyCodeList.Strings[cmb_Company.ItemIndex];
    if cmb_Depart.ItemIndex > 0 then stDepartCode := ListDepartCodeList[cmb_Depart.ItemIndex];
  end;

  GridInit(sg_report,11);
  Try
    CoInitialize(nil);
    TempAdoQuery := TADOQuery.Create(nil);
    TempAdoQuery.Connection := dmDataBase.ADOConnection;
    stSql := 'SELECT a.*,(a.AC_DATE + a.AC_TIME) as ACTIME,b.DO_NAME,c.BC_NAME as DONGNAME,d.BC_NAME as AREANAME,e.CA_NAME,e.CA_CODE,e.CA_POSITION,e.CA_TELNUM,f.PE_PERMITNAME FROM ';
    stSql := stSql + ' ( ';
    stSql := stSql + ' ( ';
    stSql := stSql + ' ( ';
    stSql := stSql + ' ( ';
    stSql := stSql + ' ( ';
    stSql := stSql + ' (select * from TB_ACCESSEVENT IN ''';
    stSql := stSql + G_stExeFolder + '\..\DB\ACCEVENT.mdb'') a ';
    stSql := stSql + ' Left Join TB_DOOR b ';
    stSql := stSql + ' ON (a.GROUP_CODE = b.GROUP_CODE ) ';
    stSql := stSql + ' AND (a.ND_NODENO = b.ND_NODENO ) ';
    stSql := stSql + ' AND (a.DE_DEVICEID = b.DE_DEVICEID ) ';
    stSql := stSql + ' AND (a.DO_DOORNO = b.DO_DOORNO ) ';
    stSql := stSql + ' ) ';
    stSql := stSql + ' Left Join (select * from TB_BUILDINGCODE where BC_POSITION = 1) c ';
    stSql := stSql + ' ON(b.GROUP_CODE = c.GROUP_CODE) ';
    stSql := stSql + ' AND(b.BC_PARENTCODE =c.BC_CHILDCODE) ';
    stSql := stSql + ' ) ';
    stSql := stSql + ' Left Join (select * from TB_BUILDINGCODE where BC_POSITION = 2) d ';
    stSql := stSql + ' ON(b.GROUP_CODE = d.GROUP_CODE) ';
    stSql := stSql + ' AND(b.BC_PARENTCODE =d.BC_PARENTCODE) ';
    stSql := stSql + ' AND(b.BC_CHILDCODE =d.BC_CHILDCODE) ';
    stSql := stSql + ' ) ';
    if (ed_EtcSearch1.Text <> '') or (ed_EtcSearch2.Text <> '') or (stCompanyCode <> '') then
    begin
      stSql := stSql + ' Inner Join ( select * from TB_CARD ';
      if stCompanyCode <> '' then
      begin
        stSql := stSql + ' Where BC_PARENTCODE = ''' + stCompanyCode + ''' ';
        if stDepartCode <> '' then stSql := stSql + ' AND BC_CHILDCODE = ''' + stCompanyCode + ''' ';
        if ed_EtcSearch1.Text <> '' then
        begin
          if cmb_EtcSearch1.ItemIndex = 0 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' AND CA_NAME = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' AND CA_NAME Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' AND CA_NAME Like ''' + ed_EtcSearch1.Text + '%'' ';
          end else if cmb_EtcSearch1.ItemIndex = 1 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' AND CA_POSITION = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' AND CA_POSITION Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' AND CA_POSITION Like ''' + ed_EtcSearch1.Text + '%'' ';
          end else if cmb_EtcSearch1.ItemIndex = 2 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' AND CA_CODE = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' AND CA_CODE Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' AND CA_CODE Like ''' + ed_EtcSearch1.Text + '%'' ';
          end else if cmb_EtcSearch1.ItemIndex = 3 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' AND CA_TELNUM = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' AND CA_TELNUM Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' AND CA_TELNUM Like ''' + ed_EtcSearch1.Text + '%'' ';
          end;
          if ed_EtcSearch2.Text <> '' then
          begin
            if cmb_EtcSearch2.ItemIndex = 0 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_NAME = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_NAME Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_NAME Like ''' + ed_EtcSearch2.Text + '%'' ';
            end else if cmb_EtcSearch2.ItemIndex = 1 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_POSITION = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_POSITION Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_POSITION Like ''' + ed_EtcSearch2.Text + '%'' ';
            end else if cmb_EtcSearch2.ItemIndex = 2 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_CODE = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_CODE Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_CODE Like ''' + ed_EtcSearch2.Text + '%'' ';
            end else if cmb_EtcSearch2.ItemIndex = 3 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_TELNUM = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_TELNUM Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_TELNUM Like ''' + ed_EtcSearch2.Text + '%'' ';
            end;
          end;
        end;
      end else
      begin
        if ed_EtcSearch1.Text <> '' then
        begin
          if cmb_EtcSearch1.ItemIndex = 0 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' Where CA_NAME = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' Where CA_NAME Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' Where CA_NAME Like ''' + ed_EtcSearch1.Text + '%'' ';
          end else if cmb_EtcSearch1.ItemIndex = 1 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' Where CA_POSITION = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' Where CA_POSITION Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' Where CA_POSITION Like ''' + ed_EtcSearch1.Text + '%'' ';
          end else if cmb_EtcSearch1.ItemIndex = 2 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' Where CA_CODE = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' Where CA_CODE Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' Where CA_CODE Like ''' + ed_EtcSearch1.Text + '%'' ';
          end else if cmb_EtcSearch1.ItemIndex = 3 then
          begin
            if cmb_Condition1.ItemIndex = 0 then stSql := stSql + ' Where CA_TELNUM = ''' + ed_EtcSearch1.Text + ''' '
            else if cmb_Condition1.ItemIndex = 1 then stSql := stSql + ' Where CA_TELNUM Like ''%' + ed_EtcSearch1.Text + '%'' '
            else if cmb_Condition1.ItemIndex = 2 then stSql := stSql + ' Where CA_TELNUM Like ''' + ed_EtcSearch1.Text + '%'' ';
          end;
          if ed_EtcSearch2.Text <> '' then
          begin
            if cmb_EtcSearch2.ItemIndex = 0 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_NAME = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_NAME Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_NAME Like ''' + ed_EtcSearch2.Text + '%'' ';
            end else if cmb_EtcSearch2.ItemIndex = 1 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_POSITION = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_POSITION Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_POSITION Like ''' + ed_EtcSearch2.Text + '%'' ';
            end else if cmb_EtcSearch2.ItemIndex = 2 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_CODE = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_CODE Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_CODE Like ''' + ed_EtcSearch2.Text + '%'' ';
            end else if cmb_EtcSearch2.ItemIndex = 3 then
            begin
              if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' AND CA_TELNUM = ''' + ed_EtcSearch2.Text + ''' '
              else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' AND CA_TELNUM Like ''%' + ed_EtcSearch2.Text + '%'' '
              else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' AND CA_TELNUM Like ''' + ed_EtcSearch2.Text + '%'' ';
            end;
          end;
        end else
        begin
          if cmb_EtcSearch2.ItemIndex = 0 then
          begin
            if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' Where CA_NAME = ''' + ed_EtcSearch2.Text + ''' '
            else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' Where CA_NAME Like ''%' + ed_EtcSearch2.Text + '%'' '
            else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' Where CA_NAME Like ''' + ed_EtcSearch2.Text + '%'' ';
          end else if cmb_EtcSearch2.ItemIndex = 1 then
          begin
            if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' Where CA_POSITION = ''' + ed_EtcSearch2.Text + ''' '
            else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' Where CA_POSITION Like ''%' + ed_EtcSearch2.Text + '%'' '
            else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' Where CA_POSITION Like ''' + ed_EtcSearch2.Text + '%'' ';
          end else if cmb_EtcSearch2.ItemIndex = 2 then
          begin
            if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' Where CA_CODE = ''' + ed_EtcSearch2.Text + ''' '
            else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' Where CA_CODE Like ''%' + ed_EtcSearch2.Text + '%'' '
            else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' Where CA_CODE Like ''' + ed_EtcSearch2.Text + '%'' ';
          end else if cmb_EtcSearch2.ItemIndex = 3 then
          begin
            if cmb_Condition2.ItemIndex = 0 then stSql := stSql + ' Where CA_TELNUM = ''' + ed_EtcSearch2.Text + ''' '
            else if cmb_Condition2.ItemIndex = 1 then stSql := stSql + ' Where CA_TELNUM Like ''%' + ed_EtcSearch2.Text + '%'' '
            else if cmb_Condition2.ItemIndex = 2 then stSql := stSql + ' Where CA_TELNUM Like ''' + ed_EtcSearch2.Text + '%'' ';
          end;
        end;
      end;
      stSql := stSql + ' )e ';
    end else
    begin
      stSql := stSql + ' Left Join TB_CARD e ';
    end;
    stSql := stSql + ' ON(a.GROUP_CODE = e.GROUP_CODE) ';
    stSql := stSql + ' AND(a.CA_CARDNO =e.CA_CARDNO) ';
    stSql := stSql + ' ) ';
    stSql := stSql + ' Left Join TB_PERMITCODE f ';
    stSql := stSql + ' ON(a.GROUP_CODE = f.GROUP_CODE) ';
    stSql := stSql + ' AND(a.PE_PERMITCODE =f.PE_PERMITCODE) ';
    stSql := stSql + ' ) ';
    stSql := stSql + ' Where a.GROUP_CODE = ''' + G_stGroupCode + ''' ';
    stSql := stSql + ' AND a.AC_DATE BETWEEN ''' + stStartDate + ''' AND ''' + stEndDate + ''' ';
    if cmb_ListDongCode.ItemIndex > 0 then
    begin
      if isDigit(stNodeNo) then
        stSql := stSql + ' AND a.ND_NODENO = ' + inttostr(strtoint(stNodeNo));
      stSql := stSql + ' AND a.DE_DEVICEID = ''' + stDeviceID + ''' ';
      if isDigit(stNodeNo) then
        stSql := stSql + ' AND a.DO_DOORNO = ' + inttostr(strtoint(stDoorNo));
    end;

    with TempAdoQuery do
    begin
      Close;
      sql.Text := stSql;
      Try
        Open;
      Except
        Exit;
      End;
      if recordcount < 1 then
      begin
        showmessage(dmFormName.GetFormMessage('2','M00021'));
        Exit;
      end;
      with sg_report do
      begin
        nRow := 1;
        RowCount := RecordCount + 1;
        while Not Eof do
        begin
          stChangeStateName := GetstChangeStateName(FindField('AC_INPUTTYPE').AsString);
          cells[0,nRow] := MakeDatetimeStr(FindField('ACTIME').AsString);
          cells[1,nRow] := FindField('DO_NAME').AsString;
          cells[2,nRow] := FindField('DONGNAME').AsString;
          cells[3,nRow] := FindField('AREANAME').AsString;
          cells[4,nRow] := FindField('CA_POSITION').AsString;
          cells[5,nRow] := FindField('CA_NAME').AsString;
          cells[6,nRow] := FindField('CA_CARDNO').AsString;
          cells[7,nRow] := FindField('CA_TELNUM').AsString;
          cells[8,nRow] := FindField('CA_CODE').AsString;
          cells[9,nRow] := stChangeStateName;
          cells[10,nRow] := FindField('PE_PERMITNAME').AsString;

          nRow := nRow + 1;
          Next;
        end;
      end;
      btn_Excel.Enabled := True;
      btn_Print.Enabled := True;
    end;
  Finally
    TempAdoQuery.Free;
    CoUninitialize;
  End;
end;

procedure TfmAccessReport.sg_reportColumnMoved(Sender: TObject; FromIndex,
  ToIndex: Integer);
begin
  inherited;
  ChangeAccessReportIndex(FromIndex,ToIndex);

end;

procedure TfmAccessReport.sg_reportResize(Sender: TObject);
begin
  inherited;
//  sg_report.DefaultColWidth := (sg_report.Width - 20) div sg_report.ColCount;
end;

initialization
  RegisterClass(TfmAccessReport);
Finalization
  UnRegisterClass(TfmAccessReport);

end.
